import 'bloc/add_vehicle_bloc.dart';import 'models/add_vehicle_model.dart';import 'package:flutter/material.dart';import 'package:blackroad_v1/core/app_export.dart';import 'package:blackroad_v1/widgets/app_bar/appbar_iconbutton_1.dart';import 'package:blackroad_v1/widgets/app_bar/appbar_subtitle.dart';import 'package:blackroad_v1/widgets/app_bar/custom_app_bar.dart';import 'package:blackroad_v1/widgets/custom_checkbox_button.dart';import 'package:blackroad_v1/widgets/custom_elevated_button.dart';import 'package:blackroad_v1/widgets/custom_text_form_field.dart';class AddVehicleScreen extends StatelessWidget {const AddVehicleScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<AddVehicleBloc>(create: (context) => AddVehicleBloc(AddVehicleState(addVehicleModelObj: AddVehicleModel()))..add(AddVehicleInitialEvent()), child: AddVehicleScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.whiteA70001, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(68), leadingWidth: 57, leading: AppbarIconbutton1(svgPath: ImageConstant.imgBiarrowrightWhiteA70001, margin: getMargin(left: 25, top: 12, bottom: 12), onTap: () {onTapBiarrowright3(context);}), title: AppbarSubtitle(text: "lbl_add_vehicle".tr, margin: getMargin(left: 57))), body: Container(width: double.maxFinite, padding: getPadding(left: 17, top: 33, right: 17, bottom: 33), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(margin: getMargin(left: 7, right: 7), decoration: AppDecoration.fill8.copyWith(borderRadius: BorderRadiusStyle.customBorderBL24), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.end, mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: getHorizontalSize(320), margin: getMargin(right: 7), child: Text("msg_you_can_view_your".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodySmallWhiteA7000112)), BlocSelector<AddVehicleBloc, AddVehicleState, TextEditingController?>(selector: (state) => state.typeController, builder: (context, typeController) {return CustomTextFormField(controller: typeController, margin: getMargin(top: 37), contentPadding: getPadding(left: 16, top: 15, right: 16, bottom: 15), textStyle: CustomTextStyles.titleMediumMedium, hintText: "lbl_select2".tr, hintStyle: CustomTextStyles.titleMediumMedium, textInputAction: TextInputAction.next, defaultBorderDecoration: TextFormFieldStyleHelper.outlineWhiteA70001, enabledBorderDecoration: TextFormFieldStyleHelper.outlineWhiteA70001, focusedBorderDecoration: TextFormFieldStyleHelper.outlineWhiteA70001, disabledBorderDecoration: TextFormFieldStyleHelper.outlineWhiteA70001);}), BlocSelector<AddVehicleBloc, AddVehicleState, TextEditingController?>(selector: (state) => state.detailsController, builder: (context, detailsController) {return CustomTextFormField(controller: detailsController, margin: getMargin(top: 20), contentPadding: getPadding(left: 12, top: 15, right: 12, bottom: 15), textStyle: CustomTextStyles.titleMediumMedium, hintText: "msg_enter_vehicle_details".tr, hintStyle: CustomTextStyles.titleMediumMedium, defaultBorderDecoration: TextFormFieldStyleHelper.outlineWhiteA70001, enabledBorderDecoration: TextFormFieldStyleHelper.outlineWhiteA70001, focusedBorderDecoration: TextFormFieldStyleHelper.outlineWhiteA70001, disabledBorderDecoration: TextFormFieldStyleHelper.outlineWhiteA70001);}), CustomElevatedButton(text: "lbl_search".tr, margin: getMargin(top: 26), buttonStyle: CustomButtonStyles.fillWhiteA70001.copyWith(fixedSize: MaterialStateProperty.all<Size>(Size(getHorizontalSize(153), getVerticalSize(40)))), buttonTextStyle: theme.textTheme.titleSmall!)])), Padding(padding: getPadding(left: 10, top: 80), child: Text("lbl_vehicle_search".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumGray900.copyWith(letterSpacing: getHorizontalSize(0.02)))), Container(margin: getMargin(left: 7, top: 16, right: 8), padding: getPadding(left: 19, top: 14, right: 19, bottom: 14), decoration: AppDecoration.fill.copyWith(borderRadius: BorderRadiusStyle.roundedBorder16), child: Row(mainAxisSize: MainAxisSize.min, children: [CustomImageView(imagePath: ImageConstant.imgGlobe48x48, height: getSize(43), width: getSize(43)), Padding(padding: getPadding(left: 22, top: 5, bottom: 5), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("msg_royal_enfield_thunderbird_350".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.labelLarge!.copyWith(letterSpacing: getHorizontalSize(0.06))), Padding(padding: getPadding(top: 3), child: Text("lbl_today_03_47pm".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.bodySmall!.copyWith(letterSpacing: getHorizontalSize(0.06))))])), CustomImageView(svgPath: ImageConstant.imgArrowupGray900, height: getSize(18), width: getSize(18), margin: getMargin(left: 39, top: 13, bottom: 12))])), BlocSelector<AddVehicleBloc, AddVehicleState, bool?>(selector: (state) => state.isCheckbox, builder: (context, isCheckbox) {return CustomCheckboxButton(text: "msg_if_you_want_to_upload".tr, value: isCheckbox, margin: getMargin(left: 7, top: 85), textStyle: theme.textTheme.titleSmall!, onChange: (value) {context.read<AddVehicleBloc>().add(ChangeCheckBoxEvent(value: value));});})])), bottomNavigationBar: CustomElevatedButton(text: "lbl_add_vehicle".tr, margin: getMargin(left: 25, right: 24, bottom: 12), buttonStyle: CustomButtonStyles.fillPrimary.copyWith(fixedSize: MaterialStateProperty.all<Size>(Size(double.maxFinite, getVerticalSize(40)))), buttonTextStyle: CustomTextStyles.titleSmallWhiteA70001))); } 
/// Navigates to the vehicleListScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `NavigatorService`
/// to push the named route for the vehicleListScreen.
onTapBiarrowright3(BuildContext context) { NavigatorService.pushNamed(AppRoutes.vehicleListScreen, ); } 
 }
