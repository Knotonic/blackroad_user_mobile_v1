import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      colorScheme: colorScheme,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              8,
            ),
          ),
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Color(0XFFFFFFFF),
          shape: RoundedRectangleBorder(
            side: BorderSide(
              color: appTheme.blueGray800,
              width: 1,
            ),
            borderRadius: BorderRadius.circular(
              8,
            ),
          ),
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.primary,
      ),
      textTheme: TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.green400,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            11,
          ),
          fontFamily: 'Lato',
          fontWeight: FontWeight.w400,
        ),
        bodyLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w300,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: getFontSize(
            28,
          ),
          fontFamily: 'Josefin Sans',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: getFontSize(
            22,
          ),
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.blueGray900,
          fontSize: getFontSize(
            36,
          ),
          fontFamily: 'Lato',
          fontWeight: FontWeight.w800,
        ),
      ),
      visualDensity: VisualDensity.standard,
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    background: Color(0XFF3C2D07),
    error: Color(0XFF05221E),
    errorContainer: Color(0XFF10911D),
    inversePrimary: Color(0XFF3C2D07),
    inverseSurface: Color(0XFF05221E),
    onBackground: Color(0XFFFFFF7F),
    onError: Color(0XFFA3A3A3),
    onErrorContainer: Color(0XFF0C1217),
    onInverseSurface: Color(0XFFA3A3A3),
    onPrimary: Color(0XFF05221E),
    onPrimaryContainer: Color(0XFFFFFF7F),
    onSecondary: Color(0XFFFFFF7F),
    onSecondaryContainer: Color(0XFF05221E),
    onSurface: Color(0XFFFFFF7F),
    onSurfaceVariant: Color(0XFF05221E),
    onTertiary: Color(0XFFFFFF7F),
    onTertiaryContainer: Color(0XFF05221E),
    outline: Color(0XFF05221E),
    outlineVariant: Color(0XFF3C2D07),
    primary: Color(0XFFF3B51B),
    primaryContainer: Color(0XFF3C2D07),
    scrim: Color(0XFF3C2D07),
    secondary: Color(0XFF3C2D07),
    secondaryContainer: Color(0XFF29CC6A),
    shadow: Color(0XFF05221E),
    surface: Color(0XFF3C2D07),
    surfaceTint: Color(0XFF05221E),
    surfaceVariant: Color(0XFF29CC6A),
    tertiary: Color(0XFF3C2D07),
    tertiaryContainer: Color(0XFF29CC6A),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);
  // Blue
  Color get blue300 => Color(0XFF5BA1E1);
  Color get blueA700 => Color(0XFF1453F6);
  // BlueGray
  Color get blueGray200 => Color(0XFFB2BAC3);
  Color get blueGray20001 => Color(0XFFB7C7CF);
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray800 => Color(0XFF30475E);
  Color get blueGray900 => Color(0XFF2C2C2B);
  // Gray
  Color get gray200 => Color(0XFFE8ECEC);
  Color get gray900 => Color(0XFF101919);
  Color get gray90007 => Color(0X07262626);
  // Graya
  Color get gray5003a => Color(0X3A949494);
  // Green
  Color get green400 => Color(0XFF45E969);
  // Indigo
  Color get indigo400 => Color(0XFF3D83C3);
  // Orange
  Color get orange100 => Color(0XFFFBE3AA);
  // Red
  Color get red400 => Color(0XFFD35B3D);
  Color get red40001 => Color(0XFFE35C3A);
  Color get red500 => Color(0XFFEB4335);
  // Teal
  Color get teal100 => Color(0XFFA8D3CE);
  Color get teal600 => Color(0XFF16897B);
  // White
  Color get whiteA700 => Color(0XFFFCFFFF);
  Color get whiteA70001 => Color(0XFFFFFFFF);
  // Yellow
  Color get yellow800 => Color(0XFFF0AC1E);
  Color get yellow80001 => Color(0XFFE9AD11);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
